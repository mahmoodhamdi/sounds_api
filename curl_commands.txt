# 1. Serve uploaded file
curl -X GET {{base}}/Uploads/levels/{{filename}}

# 2. Set welcome video (admin)
curl -X POST {{base}}/welcome_video \
-H "Authorization: Bearer {{ADMIN_TOKEN}}" \
-H "Content-Type: application/json" \
-d '{"video_url": "https://example.com/video"}'

# 3. Get welcome video
curl -X GET {{base}}/welcome_video

# 4. Register
curl -X POST {{base}}/register \
-H "Content-Type: application/json" \
-d '{"name": "John Doe", "email": "john@example.com", "password": "password123", "role": "client", "picture": "https://example.com/pic.jpg"}'

# 5. Login
curl -X POST {{base}}/login \
-H "Content-Type: application/json" \
-d '{"email": "john@example.com", "password": "password123"}'

# For Google login
curl -X POST {{base}}/login \
-H "Content-Type: application/json" \
-d '{"email": "john@example.com", "google": true}'

# 6. Get user (client)
curl -X GET {{base}}/users/{{CLIENT_ID}} \
-H "Authorization: Bearer {{CLIENT_TOKEN}}"

# 7. Update user (client)
curl -X PUT {{base}}/users/{{CLIENT_ID}} \
-H "Authorization: Bearer {{CLIENT_TOKEN}}" \
-H "Content-Type: application/json" \
-d '{"name": "New Name", "picture": "https://newpic.com"}'

# 8. Get all users (admin)
curl -X GET {{base}}/admin/users \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# 9. Delete user (admin)
curl -X DELETE {{base}}/admin/users/{{CLIENT_ID}} \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# 10. Reset user password (admin)
curl -X POST {{base}}/admin/users/{{CLIENT_ID}}/reset_password \
-H "Authorization: Bearer {{ADMIN_TOKEN}}" \
-H "Content-Type: application/json" \
-d '{"new_password": "newpassword123"}'

# 11. Assign level to user (admin)
curl -X POST {{base}}/admin/users/{{CLIENT_ID}}/assign_level/{{LEVEL_ID}} \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# 12. Create level (admin)
curl -X POST {{base}}/levels \
-H "Authorization: Bearer {{ADMIN_TOKEN}}" \
-F "name=Level 1" \
-F "description=Description" \
-F "level_number=1" \
-F "welcome_video_url=https://example.com/welcome" \
-F "price=9.99" \
-F "initial_exam_question=Question?" \
-F "final_exam_question=Final Question?" \
-F "file=@/path/to/image.jpg"

# 13. Update level (admin)
curl -X PUT {{base}}/levels/{{LEVEL_ID}} \
-H "Authorization: Bearer {{ADMIN_TOKEN}}" \
-F "name=Updated Level" \
-F "description=Updated Description" \
-F "level_number=1" \
-F "welcome_video_url=https://example.com/updated" \
-F "price=19.99" \
-F "initial_exam_question=Updated Question?" \
-F "final_exam_question=Updated Final Question?" \
-F "file=@/path/to/new_image.jpg"

# 14. Delete level (admin)
curl -X DELETE {{base}}/levels/{{LEVEL_ID}} \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# 15. Get levels (admin or client)
curl -X GET {{base}}/levels \
-H "Authorization: Bearer {{TOKEN}}"

# 16. Admin get all levels (admin)
curl -X GET {{base}}/admin/levels \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# 17. Get level (client)
curl -X GET {{base}}/levels/{{LEVEL_ID}} \
-H "Authorization: Bearer {{CLIENT_TOKEN}}"

# 18. Add video to level (admin)
curl -X POST {{base}}/levels/{{LEVEL_ID}}/videos \
-H "Authorization: Bearer {{ADMIN_TOKEN}}" \
-H "Content-Type: application/json" \
-d '{"youtube_link": "https://youtube.com/video", "questions": [{"question_id": "q1", "question": "What is 2+2?"}, {"question_id": "q2", "question": "What is the capital of France?"}]}'

# 19. Update video (admin)
curl -X PUT {{base}}/videos/{{VIDEO_ID}} \
-H "Authorization: Bearer {{ADMIN_TOKEN}}" \
-H "Content-Type: application/json" \
-d '{"youtube_link": "https://youtube.com/updated", "questions": [{"question_id": "q1", "question": "What is 3+3?"}, {"question_id": "q3", "question": "What is the largest planet?"}]}'

# 20. Delete video (admin)
curl -X DELETE {{base}}/videos/{{VIDEO_ID}} \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# 21. Get all videos (admin)
curl -X GET {{base}}/admin/videos \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# 22. Complete video (client)
curl -X PATCH {{base}}/users/{{CLIENT_ID}}/levels/{{LEVEL_ID}}/videos/{{VIDEO_ID}}/complete \
-H "Authorization: Bearer {{CLIENT_TOKEN}}"

# 23. Submit initial exam (client)
curl -X POST {{base}}/exams/{{LEVEL_ID}}/initial \
-H "Authorization: Bearer {{CLIENT_TOKEN}}" \
-H "Content-Type: application/json" \
-d '{"correct_words": 10, "wrong_words": 2, "correct_words_list": ["word1", "word2"], "wrong_words_list": ["word3"]}'

# 24. Submit final exam (client)
curl -X POST {{base}}/exams/{{LEVEL_ID}}/final \
-H "Authorization: Bearer {{CLIENT_TOKEN}}" \
-H "Content-Type: application/json" \
-d '{"correct_words": 15, "wrong_words": 1, "correct_words_list": ["word4", "word5"], "wrong_words_list": ["word6"]}'

# 25. Get user exam results (client)
curl -X GET {{base}}/exams/{{LEVEL_ID}}/user/{{CLIENT_ID}} \
-H "Authorization: Bearer {{CLIENT_TOKEN}}"

# 26. Get all exam results (admin)
curl -X GET {{base}}/admin/exams \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# 27. Submit video questions (client)
curl -X POST {{base}}/users/{{CLIENT_ID}}/levels/{{LEVEL_ID}}/videos/{{VIDEO_ID}}/submit_questions \
-H "Authorization: Bearer {{CLIENT_TOKEN}}" \
-H "Content-Type: application/json" \
-d '{"correct_words": 5, "wrong_words": 1, "correct_words_list": ["word7", "word8"], "wrong_words_list": ["word9"], "questions_answers": {"q1": "4", "q2": "Paris"}}'

# 28. Get user report (client)
curl -X GET {{base}}/report \
-H "Authorization: Bearer {{CLIENT_TOKEN}}"

# For markdown format
curl -X GET {{base}}/report?format=markdown \
-H "Authorization: Bearer {{CLIENT_TOKEN}}"

# 29. Get user levels (client)
curl -X GET {{base}}/users/{{CLIENT_ID}}/levels \
-H "Authorization: Bearer {{CLIENT_TOKEN}}"

# 30. Purchase level (client)
curl -X POST {{base}}/users/{{CLIENT_ID}}/levels/{{LEVEL_ID}}/purchase \
-H "Authorization: Bearer {{CLIENT_TOKEN}}"

# 31. Update level progress (client)
curl -X PATCH {{base}}/users/{{CLIENT_ID}}/levels/{{LEVEL_ID}}/update_progress \
-H "Authorization: Bearer {{CLIENT_TOKEN}}"

# 32. Get admin statistics (admin)
curl -X GET {{base}}/admin/statistics \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# 33. Get user statistics (admin)
curl -X GET {{base}}/admin/users/{{CLIENT_ID}}/statistics \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# 34. Get video question submissions (client)
curl -X GET {{base}}/users/{{CLIENT_ID}}/levels/{{LEVEL_ID}}/videos/{{VIDEO_ID}}/submissions \
-H "Authorization: Bearer {{CLIENT_TOKEN}}"

# 35. Get all video question submissions (admin)
curl -X GET {{base}}/admin/video_question_submissions \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"

# With query parameters
curl -X GET {{base}}/admin/video_question_submissions?user_id={{CLIENT_ID}}&level_id={{LEVEL_ID}}&video_id={{VIDEO_ID}} \
-H "Authorization: Bearer {{ADMIN_TOKEN}}"
